{"version":3,"file":"static/js/74.3b117c33.chunk.js","mappings":"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","sources":["components/MoviesGalery/MoviesGalery.styled.jsx","components/MoviesGalery/MoviesGalery.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","components/Similar/Similar.styled.jsx","components/Similar/SimilarMovie.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieTitle = styled.p`\n  font-size: 14px;\n  display: none;\n  text-align: center;\n  :hover {\n    display: block;\n  }\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  justify-content: space-between;\n  margin-right: -10px;\n`;\nexport const MovieItem = styled.li`\n  position: relative;\n  width: calc(100% / 2 - 20px);\n  height: auto;\n  margin: 10px;\n  border-radius: 5px;\n  border-radius: 5px 5px 5px 5px;\n  -webkit-box-shadow: 5px 5px 12px 0px rgba(196, 232, 241, 1);\n  -moz-box-shadow: 5px 5px 12px 0px rgba(196, 232, 241, 1);\n  box-shadow: 5px 5px 12px 0px rgba(196, 232, 241, 1);\n  :hover {\n    scale: 1.05;\n\n    -webkit-box-shadow: 5px 5px 12px 0px rgba(196, 232, 241, 1);\n    -moz-box-shadow: 5px 5px 12px 0px rgba(196, 232, 241, 1);\n    box-shadow: 5px 5px 12px 0px rgba(196, 232, 241, 1);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: calc(100% / 4 - 20px);\n    margin: 15px 10px;\n  }\n  @media screen and (min-width: 1200px) {\n    width: calc(100% / 5 - 20px);\n    margin: 15px 10px;\n  }\n`;\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  :hover {\n    cursor: pointer;\n  }\n  :hover p {\n    display: block;\n  }\n  :hover span {\n    display: none;\n  }\n`;\nexport const MovieRate = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 2px 10px 2px 10px;\n  text-align: center;\n\n  height: 25px;\n  color: aliceblue;\n  font-size: 12px;\n  @media screen and (min-width: 1200px) {\n    padding: 10px 10px 0 10px;\n    font-size: 14px;\n  }\n`;\nexport const MovieVote = styled.div`\n  width: max-content;\n  background-color: #7dc2fa;\n  border-radius: 5px;\n  padding: 0 5px;\n  display: flex;\n  position: absolute;\n  top: 2px;\n  left: 2px;\n`;\nexport const MovieImg = styled.img`\n  display: block;\n  width: 100%;\n  height: 85%;\n  border-radius: 5px 5px 0 0;\n`;\n","import React from 'react';\nimport { MdOutlineStarRate } from 'react-icons/md';\nimport { useLocation } from 'react-router-dom';\nimport imageNotFound from '../../images/nf.jpg';\nimport EllipsisText from 'react-ellipsis-text';\nimport {\n  MovieList,\n  MovieItem,\n  MovieTitle,\n  MovieLink,\n  MovieRate,\n  MovieImg,\n  MovieVote,\n} from './MoviesGalery.styled';\n\nconst MoviesGalery = ({ movies, tvepisodes, pathName }) => {\n  const location = useLocation();\n  return (\n    <>\n      <MovieList>\n        {movies.map(({ id, title, name, poster_path, vote_average }) => (\n          <MovieItem key={id}>\n            <MovieLink to={`${pathName}/${id}`} state={{ from: location }}>\n              <MovieImg\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                    : imageNotFound\n                }\n                alt={title ? title : name}\n              />\n              <MovieRate>\n                <MovieVote>\n                  <MdOutlineStarRate />\n                  <p>{Math.floor(vote_average * 100) / 100}</p>\n                </MovieVote>\n                <MovieTitle>{title ? title : name} </MovieTitle>\n                <EllipsisText text={`${title ? title : name}`} length={24} />\n              </MovieRate>\n            </MovieLink>\n          </MovieItem>\n        ))}\n      </MovieList>\n    </>\n  );\n};\n\nexport default MoviesGalery;\n","import styled from 'styled-components';\n\nexport const PaginationContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  // align-items: center;\n`;\n","import React from 'react';\nimport { Pagination, PaginationItem } from '@mui/material';\nimport { PaginationContainer } from './Pagination.styled';\nimport { grey } from '@mui/material/colors';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport { Link, MemoryRouter, Routes, Route } from 'react-router-dom';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: grey[100],\n    },\n  },\n});\nconst PaginationList = ({ totalPage, currentPage, paginate, searchParams }) => {\n  return (\n    <PaginationContainer>\n      <ThemeProvider theme={theme}>\n        <Pagination\n          showFirstButton\n          showLastButton\n          count={totalPage}\n          page={currentPage}\n          color=\"primary\"\n          shape=\"rounded\"\n          variant=\"outlined\"\n          onChange={(_, num) => {\n            paginate(num);\n            console.log(currentPage);\n          }}\n          renderItem={item => (\n            <PaginationItem\n              component={Link}\n              to={`${searchParams}?page=${item.page}`}\n              {...item}\n            />\n          )}\n        />\n      </ThemeProvider>\n    </PaginationContainer>\n  );\n};\n\nexport default PaginationList;\n\nexport function PaginationLink() {\n  return (\n    <MemoryRouter initialEntries={['/inbox']} initialIndex={0}>\n      <Routes>\n        <Route path=\"*\" element={<PaginationList />} />\n      </Routes>\n    </MemoryRouter>\n  );\n}\n","import styled from 'styled-components';\n\nexport const SimilarMovieContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchSimilarMovie } from '../../services/api';\nimport toast from 'react-hot-toast';\nimport { SimilarMovieContainer } from './Similar.styled';\nimport MoviesGalery from 'components/MoviesGalery/MoviesGalery';\nimport PaginationList from 'components/Pagination/Pagination';\n\nconst SimilarMovie = () => {\n  const [similarMovie, setSimilarMovie] = useState([]);\n  const { movieId } = useParams();\n  const [loading, setLoading] = useState(false);\n  const [totalPages, setTotalPages] = useState(1);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  useEffect(() => {\n    setLoading(true);\n\n    fetchSimilarMovie(movieId, currentPage)\n      .then(data => {\n        const {\n          data: { results, total_pages },\n        } = data;\n\n        setSimilarMovie(results);\n        setTotalPages(total_pages);\n      })\n      .catch(error => {\n        return toast.error('Sorry, something went wrong, try again');\n      })\n      .finally(setLoading(false));\n  }, [movieId, currentPage]);\n  const paginate = num => setCurrentPage(num);\n\n  return (\n    <SimilarMovieContainer>\n      {loading && <p>Loading...</p>}\n      {similarMovie && (\n        <>\n          <h3>Similar Movie:</h3>\n          <MoviesGalery movies={similarMovie} />\n          <PaginationList\n            movies={similarMovie}\n            totalPage={totalPages}\n            paginate={paginate}\n            currentPage={currentPage}\n          />\n        </>\n      )}\n    </SimilarMovieContainer>\n  );\n};\n\nexport default SimilarMovie;\n"],"names":["MovieTitle","styled","MovieList","MovieItem","MovieLink","Link","MovieRate","MovieVote","MovieImg","movies","pathName","tvepisodes","location","useLocation","map","id","title","name","poster_path","vote_average","to","state","from","src","imageNotFound","alt","Math","floor","text","length","PaginationContainer","theme","createTheme","palette","primary","main","grey","PaginationList","totalPage","currentPage","paginate","searchParams","ThemeProvider","Pagination","showFirstButton","showLastButton","count","page","color","shape","variant","onChange","_","num","console","log","renderItem","item","PaginationItem","component","SimilarMovieContainer","useState","similarMovie","setSimilarMovie","movieId","useParams","loading","setLoading","totalPages","setTotalPages","setCurrentPage","useEffect","fetchSimilarMovie","then","data","results","total_pages","catch","error","toast","finally"],"sourceRoot":""}