{"version":3,"file":"static/js/736.16c3cc83.chunk.js","mappings":"8QAEaA,EAAWC,EAAAA,GAAAA,GAAH,8IAORC,EAAWD,EAAAA,GAAAA,GAAH,wGAKRE,EAAUF,EAAAA,GAAAA,IAAH,mGAMPG,EAAWH,EAAAA,GAAAA,IAAH,sF,SC+CrB,MA5DA,WACE,OAAgCI,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KA2BA,OAzBAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,IAEXE,EAAAA,EAAAA,IAAkBL,GACfM,MAAK,SAAAC,GACJ,IACUC,EACND,EADFA,KAAQC,KAKV,GAFAT,EAAYS,GAEQ,IAAhBA,EAAKC,OACP,OAAOC,EAAAA,GAAAA,MACL,kEAILC,OAAM,SAAAC,GACL,OAAOF,EAAAA,GAAAA,MACL,kEAGHG,QAAQV,GAAW,MACrB,CAACH,KAGF,gCACGE,IAAW,SAACY,EAAA,EAAD,KACZ,SAAClB,EAAD,UACGE,IACC,SAACN,EAAD,UACGM,EAASiB,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,aAA7B,OACZ,UAACzB,EAAD,YACE,0BACE,SAACC,EAAD,CACEyB,IACED,EACI,kCAAoCA,EACpC,cAENE,IAAKJ,OAGT,4BACE,uBAAIA,IACHC,IAAa,6BAAKA,EAAL,YAbHF,e,8EC1ChBM,E,QAAkB7B,GAAAA,IAAH,8F,SCS5B,EARe,WACb,OACE,UAAC6B,EAAD,YACE,SAAC,KAAD,CAAUC,MAAM,UAAUC,OAAQ,GAAIC,MAAO,KAD/C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/Loader/Loader.style.jsx","components/Loader/Loader.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\nexport const CastItem = styled.li`\n  width: calc(100% / 6 - 20px);\n  margin-bottom: 30px;\n  border-radius: 5px;\n`;\nexport const CastImg = styled.img`\n  display: block;\n  width: 100%;\n  height: auto;\n  border-radius: 5px;\n`;\nexport const CastCont = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from '../../services/api';\nimport Loader from '../Loader/Loader';\nimport toast from 'react-hot-toast';\nimport { CastImg, CastList, CastCont, CastItem } from './Cast.styled';\n\nfunction Cast() {\n  const [castInfo, setCastInfo] = useState([]);\n  const { movieId } = useParams();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    fetchMovieCredits(movieId)\n      .then(data => {\n        const {\n          data: { cast },\n        } = data;\n\n        setCastInfo(cast);\n\n        if (cast.length === 0) {\n          return toast.error(\n            \"We don't have any information about the cast for this movie\"\n          );\n        }\n      })\n      .catch(error => {\n        return toast.error(\n          \"We don't have any information about the cast for this movie\"\n        );\n      })\n      .finally(setLoading(false));\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      <CastCont>\n        {castInfo && (\n          <CastList>\n            {castInfo.map(({ cast_id, name, character, profile_path }) => (\n              <CastItem key={cast_id}>\n                <div>\n                  <CastImg\n                    src={\n                      profile_path\n                        ? 'https://image.tmdb.org/t/p/w500' + profile_path\n                        : 'noPosterImg'\n                    }\n                    alt={name}\n                  />\n                </div>\n                <div>\n                  <p>{name}</p>\n                  {character && <p>({character})</p>}\n                </div>\n              </CastItem>\n            ))}\n          </CastList>\n        )}\n      </CastCont>\n    </>\n  );\n}\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { TailSpin } from 'react-loader-spinner';\nimport { LoaderContainer } from './Loader.style.jsx';\n\nconst Loader = () => {\n  return (\n    <LoaderContainer>\n      <TailSpin color=\"#00BFFF\" height={80} width={80} />;\n    </LoaderContainer>\n  );\n};\n\nexport default Loader;\n"],"names":["CastList","styled","CastItem","CastImg","CastCont","useState","castInfo","setCastInfo","movieId","useParams","loading","setLoading","useEffect","fetchMovieCredits","then","data","cast","length","toast","catch","error","finally","Loader","map","cast_id","name","character","profile_path","src","alt","LoaderContainer","color","height","width"],"sourceRoot":""}