{"version":3,"file":"static/js/667.737aceec.chunk.js","mappings":"0MAEaA,EAAgBC,EAAAA,GAAAA,OAAH,wbAiBbC,EAAgBD,EAAAA,GAAAA,OAAH,+F,SCI1B,EAnBgB,SAAC,GAAkB,IAAhBE,EAAe,EAAfA,SACjB,OACE,0BACE,UAACH,EAAD,CAAeI,KAAK,SAASC,GAAG,SAASF,SAAUA,EAAnD,WACE,SAACD,EAAD,CAAeI,MAAM,GAArB,6EAEA,SAACJ,EAAD,CAAeI,MAAM,iBAArB,sCACA,SAACJ,EAAD,CAAeI,MAAM,kBAArB,sCACA,SAACJ,EAAD,CAAeI,MAAM,mBAArB,wCACA,SAACJ,EAAD,CAAeI,MAAM,oBAArB,wCACA,SAACJ,EAAD,CAAeI,MAAM,mBAArB,wCACA,SAACJ,EAAD,CAAeI,MAAM,oBAArB,8C,kLCiER,UAnEmB,WAAO,IAAD,IACjBC,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA8BL,EAAAA,EAAAA,WAAS,GAAvC,eAAOM,EAAP,KAAgBC,EAAhB,KACA,GAAsCP,EAAAA,EAAAA,UACpCQ,SAAQ,UAACV,EAASW,cAAV,aAAC,EAAiBC,MAAM,KAAKC,MAAM,GAAGC,KAAK,IAAIF,MAAM,KAAK,KAAO,GAD3E,eAAOG,EAAP,KAAoBC,EAApB,KAGA,GAAkCd,EAAAA,EAAAA,UAAS,GAA3C,eAAOe,EAAP,KAAkBC,EAAlB,KACA,GAAoChB,EAAAA,EAAAA,WAClC,UAAAF,EAASW,cAAT,eAAiBC,MAAM,KAAKC,MAAM,EAAG,GAAGC,KAAK,IAAIF,MAAM,KAAK,KAAM,IADpE,eAAOO,EAAP,KAAmBC,EAAnB,KAIAd,EAAae,IAAI,SAQjBC,EAAAA,EAAAA,YAAU,WACRb,GAAW,IACXc,EAAAA,EAAAA,IAAiBJ,EAAYJ,GAC1BS,MAAK,SAAAC,GACJ,MAEIA,EADFA,KAAQC,EADV,EACUA,QAASC,EADnB,EACmBA,YAEnBvB,EAAUsB,GACVR,EAAaS,MAEdC,OAAM,SAAAC,GACL,OAAOC,EAAAA,GAAAA,MAAY,6CAEpBC,QAAQtB,GAAW,MACrB,CAACU,EAAYJ,IAIhB,OACE,UAAC,IAAD,YACE,UAAC,IAAD,YACE,SAAC,IAAD,CAASnB,SA3BY,SAAAoC,GACzBzB,EAAgB,CAAE0B,KAAMD,EAAEE,OAAOnC,QACjCqB,EAAcY,EAAEE,OAAOnC,OACvBiB,EAAe,OA0BX,SAAC,KAAD,WACE,SAAC,KAAD,CAAMmB,GAAE,iBAAoBC,MAAO,CAAEC,KAAMrC,GAA3C,UACE,SAAC,cAAD,CAAsBD,MAAO,CAAEuC,MAAO,YAAaC,KAAM,OAAzD,UACE,0BACE,SAAC,MAAD,eAOT/B,IAAW,SAAC,IAAD,IACXL,IAAU,SAAC,IAAD,CAAcqC,SAAU,UAAWrC,OAAQA,KAEtD,SAAC,IAAD,CACEc,UAAWA,EACXwB,SAvBW,SAAAC,GAAG,OAAI1B,EAAe0B,IAwBjC3B,YAAaA,EACbT,aAAY,gBAAWa","sources":["components/SortBar/SortBar.styled.jsx","components/SortBar/SortBar.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SortBarSelect = styled.select`\n  cursor: pointer;\n  border: none;\n  background-color: #212c39;\n  padding: 10px 15px;\n\n  color: aliceblue;\n  border-bottom: 1px solid rgba(196, 232, 241, 1);\n  :focus {\n    border-radius: 5px;\n\n    outline: none;\n    -webkit-box-shadow: 3px 1px 14px 0px rgba(196, 232, 241, 1);\n    -moz-box-shadow: 3px 1px 14px 0px rgba(196, 232, 241, 1);\n    box-shadow: 3px 1px 14px 0px rgba(196, 232, 241, 1);\n  }\n`;\nexport const SortBarOption = styled.option`\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SortBarOption, SortBarSelect } from './SortBar.styled';\n\nconst SortBar = ({ onChange }) => {\n  return (\n    <div>\n      <SortBarSelect name=\"movies\" id=\"movies\" onChange={onChange}>\n        <SortBarOption value=\"\">-ðŸ •ðŸ — sort by... ðŸ —ðŸ •-</SortBarOption>\n\n        <SortBarOption value=\"popularity.asc\">popularity ðŸ •</SortBarOption>\n        <SortBarOption value=\"popularity.desc\">popularity ðŸ —</SortBarOption>\n        <SortBarOption value=\"vote_average.asc\">vote average ðŸ •</SortBarOption>\n        <SortBarOption value=\"vote_average.desc\">vote average ðŸ —</SortBarOption>\n        <SortBarOption value=\"release_date.asc\">release date ðŸ •</SortBarOption>\n        <SortBarOption value=\"release_date.desc\">release date ðŸ —</SortBarOption>\n      </SortBarSelect>\n    </div>\n  );\n};\nSortBar.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\nexport default SortBar;\n","import { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchMovieBySort } from '../../services/api';\nimport Loader from '../../components/Loader/Loader';\nimport toast from 'react-hot-toast';\nimport MoviesGalery from '../../components/MoviesGalery/MoviesGalery';\nimport SortBar from '../../components/SortBar/SortBar';\nimport { SearchOptionContainer, PageContainer } from './MoviesPage.styled';\nimport PaginationList from 'components/Pagination/Pagination';\nimport { SearchBtn } from 'components/SearchBar/SearchBar.styled';\nimport { ImSearch } from 'react-icons/im';\nimport { IconContext } from 'react-icons';\n\nconst MoviesPage = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(\n    parseInt(location.search?.split('?').slice(2).join('').split('=')[1]) || 1\n  );\n  const [totalPage, setTotalPage] = useState(1);\n  const [sortOption, setSortOption] = useState(\n    location.search?.split('?').slice(1, 2).join('').split('=')[1] || ''\n  );\n\n  searchParams.get('sort');\n\n  const handleChangeSelect = e => {\n    setSearchParams({ sort: e.target.value });\n    setSortOption(e.target.value);\n    setCurrentPage(1);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    fetchMovieBySort(sortOption, currentPage)\n      .then(data => {\n        const {\n          data: { results, total_pages },\n        } = data;\n        setMovies(results);\n        setTotalPage(total_pages);\n      })\n      .catch(error => {\n        return toast.error('Sorry, something went wrong, try again');\n      })\n      .finally(setLoading(false));\n  }, [sortOption, currentPage]);\n\n  const paginate = num => setCurrentPage(num);\n\n  return (\n    <PageContainer>\n      <SearchOptionContainer>\n        <SortBar onChange={handleChangeSelect} />\n\n        <SearchBtn>\n          <Link to={`/movies/search`} state={{ from: location }}>\n            <IconContext.Provider value={{ color: 'aliceblue', size: '2em' }}>\n              <div>\n                <ImSearch />\n              </div>\n            </IconContext.Provider>\n          </Link>\n        </SearchBtn>\n      </SearchOptionContainer>\n\n      {loading && <Loader />}\n      {movies && <MoviesGalery pathName={'/movies'} movies={movies} />}\n\n      <PaginationList\n        totalPage={totalPage}\n        paginate={paginate}\n        currentPage={currentPage}\n        searchParams={`?sort=${sortOption}`}\n      />\n    </PageContainer>\n  );\n};\nexport default MoviesPage;\n"],"names":["SortBarSelect","styled","SortBarOption","onChange","name","id","value","location","useLocation","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","loading","setLoading","parseInt","search","split","slice","join","currentPage","setCurrentPage","totalPage","setTotalPage","sortOption","setSortOption","get","useEffect","fetchMovieBySort","then","data","results","total_pages","catch","error","toast","finally","e","sort","target","to","state","from","color","size","pathName","paginate","num"],"sourceRoot":""}