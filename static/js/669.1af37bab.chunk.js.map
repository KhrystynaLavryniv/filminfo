{"version":3,"file":"static/js/669.1af37bab.chunk.js","mappings":"sPAEaA,EAAcC,EAAAA,GAAAA,GAAH,6GAMXC,EAAcD,EAAAA,GAAAA,GAAH,wH,mBC8CxB,EA/CgB,WACd,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,IACXE,EAAAA,EAAAA,IAAaR,GACVS,MAAK,SAAAC,GACJ,IACUC,EACND,EADFA,KAAQC,QAGVP,EAAWO,EAAQC,OAAO,EAAG,OAE9BC,OAAM,SAAAC,GACL,OAAOC,EAAAA,GAAAA,MAAY,6CAGpBC,QAAQV,GAAW,MACrB,CAACN,KAEF,gCACGK,IAAW,sCACXF,GACC,SAACN,EAAD,UACGM,EAAQc,KAAI,gBAAGC,EAAH,EAAGA,IAAH,OACX,SAACnB,EAAD,WACE,mBACEoB,MAAO,IACPC,OAAQ,IACRC,IAAG,wCAAmCH,GACtCI,MAAM,uBACNC,YAAY,IACZC,MAAM,2FACNC,iBAAe,KARDP,SActB","sources":["components/Trailer/Trailer.styled.jsx","components/Trailer/Trailer.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const TrailerList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n`;\nexport const TrailerItem = styled.li`\n  margin-bottom: 15px;\n\n  // & iframe {\n  //   width: 650px;\n  //   height: 400px;\n  // }\n`;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchTrailer } from '../../services/api';\nimport { TrailerItem, TrailerList } from './Trailer.styled';\nimport { toast } from 'react-hot-toast';\n\nconst Trailer = () => {\n  const { movieId } = useParams();\n  const [trailer, setTrailer] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    fetchTrailer(movieId)\n      .then(data => {\n        const {\n          data: { results },\n        } = data;\n\n        setTrailer(results.splice(0, 3));\n      })\n      .catch(error => {\n        return toast.error('Sorry, something went wrong, try again');\n      })\n\n      .finally(setLoading(false));\n  }, [movieId]);\n  return (\n    <>\n      {loading && <p>Loading...</p>}\n      {trailer ? (\n        <TrailerList>\n          {trailer.map(({ key }) => (\n            <TrailerItem key={key}>\n              <iframe\n                width={800}\n                height={500}\n                src={`https://www.youtube.com/embed/${key}`}\n                title=\"YouTube video player\"\n                frameBorder=\"0\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen\n              ></iframe>\n            </TrailerItem>\n          ))}\n        </TrailerList>\n      ) : (\n        <p>Sorry, we couldn't find this video</p>\n      )}\n    </>\n  );\n};\n\nexport default Trailer;\n"],"names":["TrailerList","styled","TrailerItem","movieId","useParams","useState","trailer","setTrailer","loading","setLoading","useEffect","fetchTrailer","then","data","results","splice","catch","error","toast","finally","map","key","width","height","src","title","frameBorder","allow","allowFullScreen"],"sourceRoot":""}