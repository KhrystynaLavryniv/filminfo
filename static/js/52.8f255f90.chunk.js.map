{"version":3,"file":"static/js/52.8f255f90.chunk.js","mappings":"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","sources":["components/Navigation/Navigation.styled.jsx","pages/TVEpisodesDetalisPage/TVEpisodesDetalisPage.styled.jsx","pages/TVEpisodesDetalisPage/TVEpisodesDetalisPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const Link = styled(NavLink)`\n  display: block;\n  text-decoration: none;\n  padding: 12px;\n  font-weight: 500;\n  color: aliceblue;\n  font-size: 18px;\n  &.active,\n  &:hover {\n    color: #7dc2fa;\n  }\n`;\nexport const LogoLink = styled(NavLink)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  text-decoration: none;\n  font-weight: 500;\n  color: aliceblue;\n  font-size: 3em;\n  margin-right: 25px;\n  &.active,\n  &:hover {\n    color: #7dc2fa;\n  }\n`;\nexport const LinkFind = styled(NavLink)`\n  display: block;\n  text-decoration: none;\n  padding: 12px;\n  font-weight: 500;\n  color: aliceblue;\n  font-size: 1.5em;\n  &.active,\n  &:hover {\n    color: #7dc2fa;\n  }\n`;\nexport const LogoText = styled.p`\n  font-size: 18px;\n`;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const GoBackButton = styled.button`\n  cursor: pointer;\n  display: flex;\n  background: transparent;\n  border: none;\n  font-size: 40px;\n`;\nexport const LinkBack = styled(NavLink)`\n  display: block;\n  text-decoration: none;\n  font-weight: 500;\n  color: aliceblue;\n  font-size: 28px;\n  &.active,\n  &:hover {\n    color: #7dc2fa;\n  }\n`;\nexport const MovieDetalisContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  min-height: calc(100vh - 68px - 68px - 40px);\n  padding: 20px 20px;\n`;\nexport const Cont = styled.div`\n  display: flex;\n  // padding: 20px 20px;\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  // padding: 20px 0;\n`;\n\nexport const MovieDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n  // margin-bottom: 15px;\n`;\n\nexport const MovieImg = styled.img`\n  display: block;\n  width: 280px;\n  height: 100%;\n  border-radius: 5px;\n  margin: auto;\n  margin-right: 40px;\n`;\n\nexport const MovieTitle = styled.h2`\n  padding: 0;\n  margin-bottom: 10px;\n`;\n\nexport const MovieVote = styled.div`\n  width: max-content;\n  background-color: #7dc2fa;\n  border-radius: 5px;\n  padding: 0 5px;\n  display: flex;\n`;\nexport const MovieDetailsText = styled.div`\n  display: flex;\n  padding: 0;\n  margin-top: 10px;\n  align-items: flex-end;\n`;\nexport const MovieDetailsOption = styled.p`\n  width: 140px;\n`;\nexport const MovieDetailsOverview = styled.h3`\n  margin-top: 10px;\n`;\n\nexport const AdditionalInformation = styled.ul`\n  display: flex;\n  flex-direction: row;\n  border-top: 1px black solid;\n  border-bottom: 1px black solid;\n`;\nexport const CastList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`;\n","import { useState, useEffect, useRef } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { fetchTVEpisodesById } from '../../services/api';\nimport Loader from '../../components/Loader/Loader';\nimport toast from 'react-hot-toast';\nimport { BsArrowLeftShort } from 'react-icons/bs';\nimport { Link } from '../../components/Navigation/Navigation.styled';\nimport imageNotFound from '../../images/nf.jpg';\nimport {\n  GoBackButton,\n  MovieImg,\n  MovieDetails,\n  MovieTitle,\n  MovieDetailsText,\n  AdditionalInformation,\n  MovieDetalisContainer,\n  Cont,\n  LinkBack,\n  MovieInfo,\n  MovieVote,\n  MovieDetailsOption,\n  MovieDetailsOverview,\n} from './TVEpisodesDetalisPage.styled';\nimport { MdOutlineStarRate } from 'react-icons/md';\n\nconst TVEpisodesDetalisPage = () => {\n  const { tvepisodesId } = useParams();\n  const [tvEpisode, setTVEpisode] = useState();\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n  const path = useRef(location);\n\n  useEffect(() => {\n    setLoading(true);\n    fetchTVEpisodesById(tvepisodesId)\n      .then(data => {\n        const {\n          data: {\n            poster_path,\n            title,\n            name,\n            overview,\n            original_language,\n            episode_run_time,\n            vote_average,\n            genres,\n            number_of_episodes,\n            vote_count,\n          },\n        } = data;\n\n        setTVEpisode({\n          poster: poster_path\n            ? 'https://image.tmdb.org/t/p/w500' + poster_path\n            : imageNotFound,\n          title,\n          name,\n          original_language,\n          vote_count,\n          overview: overview ? overview : 'There is no overview',\n          vote_average,\n          episode_run_time:\n            episode_run_time.length === 0\n              ? 'Unknown run time'\n              : `${episode_run_time} min`,\n          number_of_episodes:\n            number_of_episodes === null\n              ? 'Unknown number of episodes'\n              : number_of_episodes,\n          genresValues:\n            genres.length === 0\n              ? 'Unknown genre'\n              : genres.map(({ name }) => [name]).join(', '),\n        });\n      })\n      .catch(error => {\n        return toast.error('Sorry, something went wrong, try again');\n      })\n\n      .finally(setLoading(false));\n  }, [tvepisodesId]);\n\n  return (\n    <MovieDetalisContainer>\n      {loading && <Loader />}\n\n      {tvEpisode && (\n        <>\n          <Cont>\n            <GoBackButton type=\"button\">\n              <LinkBack\n                to={path.current?.state?.from ?? `/`}\n                state={{ from: path.current }}\n              >\n                <BsArrowLeftShort />\n              </LinkBack>\n            </GoBackButton>\n            <MovieImg\n              src={tvEpisode.poster}\n              alt={tvEpisode.title ? tvEpisode.title : tvEpisode.name}\n            />\n\n            <MovieInfo>\n              <MovieDetails>\n                <MovieTitle>\n                  {tvEpisode.title ? tvEpisode.title : tvEpisode.name}\n                </MovieTitle>\n                <MovieVote>\n                  <MdOutlineStarRate />\n                  {Math.floor(tvEpisode.vote_average * 100) / 100}\n                </MovieVote>\n\n                <MovieDetailsText>\n                  <MovieDetailsOption>Episodes:</MovieDetailsOption>\"\n                  {tvEpisode.number_of_episodes}\"\n                </MovieDetailsText>\n                <MovieDetailsText>\n                  <MovieDetailsOption>Genres:</MovieDetailsOption> \"\n                  {tvEpisode.genresValues}\"\n                </MovieDetailsText>\n                <MovieDetailsText>\n                  <MovieDetailsOption>Run time :</MovieDetailsOption>\"\n                  {tvEpisode.episode_run_time}\"\n                </MovieDetailsText>\n                <MovieDetailsText>\n                  <MovieDetailsOption>Language:</MovieDetailsOption>\"\n                  {tvEpisode.original_language}\"\n                </MovieDetailsText>\n                <MovieDetailsOverview> Overview:</MovieDetailsOverview>\n\n                <MovieDetailsText>{tvEpisode.overview}</MovieDetailsText>\n              </MovieDetails>\n              <div>\n                <AdditionalInformation>\n                  <li>\n                    <Link to={`/movies/${tvepisodesId}/cast`}>Cast</Link>\n                  </li>\n                  <li>\n                    <Link to={`/movies/${tvepisodesId}/trailer`}>Trailer</Link>\n                  </li>\n                  <li>\n                    <Link to={`/movies/${tvepisodesId}/reviews`}>Reviews</Link>\n                  </li>\n                  <li>\n                    <Link to={`/movies/${tvepisodesId}/similar`}>Similar</Link>\n                  </li>\n                </AdditionalInformation>\n              </div>\n            </MovieInfo>\n          </Cont>\n\n          <div>\n            <Outlet />\n          </div>\n        </>\n      )}\n    </MovieDetalisContainer>\n  );\n};\nexport default TVEpisodesDetalisPage;\n"],"names":["NavContainer","styled","Link","NavLink","LogoLink","LogoText","GoBackButton","LinkBack","MovieDetalisContainer","Cont","MovieInfo","MovieDetails","MovieImg","MovieTitle","MovieVote","MovieDetailsText","MovieDetailsOption","MovieDetailsOverview","AdditionalInformation","tvepisodesId","useParams","useState","tvEpisode","setTVEpisode","loading","setLoading","location","useLocation","path","useRef","useEffect","fetchTVEpisodesById","then","data","poster_path","title","name","overview","original_language","episode_run_time","vote_average","genres","number_of_episodes","vote_count","poster","imageNotFound","length","genresValues","map","join","catch","error","toast","finally","Loader","type","to","current","state","from","src","alt","Math","floor"],"sourceRoot":""}