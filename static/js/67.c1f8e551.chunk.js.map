{"version":3,"file":"static/js/67.c1f8e551.chunk.js","mappings":"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","sources":["components/MoviesGalery/MoviesGalery.styled.jsx","components/MoviesGalery/MoviesGalery.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","components/SearchBar/SearchBar.styled.jsx","components/SortBar/SortBar.styled.jsx","components/SortBar/SortBar.jsx","pages/MoviesPage/MoviesPage.styled.jsx","pages/TVPage/TVPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieTitle = styled.p`\n  font-size: 14px;\n  display: none;\n  text-align: center;\n  :hover {\n    display: block;\n  }\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  justify-content: space-between;\n  margin-right: -10px;\n`;\nexport const MovieItem = styled.li`\n  position: relative;\n  width: calc(100% / 2 - 20px);\n  height: auto;\n  margin: 10px;\n  border-radius: 5px;\n  border-radius: 5px 5px 5px 5px;\n  -webkit-box-shadow: 5px 5px 12px 0px rgba(196, 232, 241, 1);\n  -moz-box-shadow: 5px 5px 12px 0px rgba(196, 232, 241, 1);\n  box-shadow: 5px 5px 12px 0px rgba(196, 232, 241, 1);\n  :hover {\n    scale: 1.05;\n\n    -webkit-box-shadow: 5px 5px 12px 0px rgba(196, 232, 241, 1);\n    -moz-box-shadow: 5px 5px 12px 0px rgba(196, 232, 241, 1);\n    box-shadow: 5px 5px 12px 0px rgba(196, 232, 241, 1);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: calc(100% / 4 - 20px);\n    margin: 15px 10px;\n  }\n  @media screen and (min-width: 1200px) {\n    width: calc(100% / 5 - 20px);\n    margin: 15px 10px;\n  }\n`;\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  :hover {\n    cursor: pointer;\n  }\n  :hover p {\n    display: block;\n  }\n  :hover span {\n    display: none;\n  }\n`;\nexport const MovieRate = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 2px 10px 2px 10px;\n  text-align: center;\n\n  height: 25px;\n  color: aliceblue;\n  font-size: 12px;\n  @media screen and (min-width: 1200px) {\n    padding: 10px 10px 0 10px;\n    font-size: 14px;\n  }\n`;\nexport const MovieVote = styled.div`\n  width: max-content;\n  background-color: #7dc2fa;\n  border-radius: 5px;\n  padding: 0 5px;\n  display: flex;\n  position: absolute;\n  top: 2px;\n  left: 2px;\n`;\nexport const MovieImg = styled.img`\n  display: block;\n  width: 100%;\n  height: 85%;\n  border-radius: 5px 5px 0 0;\n`;\n","import React from 'react';\nimport { MdOutlineStarRate } from 'react-icons/md';\nimport { useLocation } from 'react-router-dom';\nimport imageNotFound from '../../images/nf.jpg';\nimport EllipsisText from 'react-ellipsis-text';\nimport {\n  MovieList,\n  MovieItem,\n  MovieTitle,\n  MovieLink,\n  MovieRate,\n  MovieImg,\n  MovieVote,\n} from './MoviesGalery.styled';\n\nconst MoviesGalery = ({ movies, tvepisodes, pathName }) => {\n  const location = useLocation();\n  return (\n    <>\n      <MovieList>\n        {movies.map(({ id, title, name, poster_path, vote_average }) => (\n          <MovieItem key={id}>\n            <MovieLink to={`${pathName}/${id}`} state={{ from: location }}>\n              <MovieImg\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                    : imageNotFound\n                }\n                alt={title ? title : name}\n              />\n              <MovieRate>\n                <MovieVote>\n                  <MdOutlineStarRate />\n                  <p>{Math.floor(vote_average * 100) / 100}</p>\n                </MovieVote>\n                <MovieTitle>{title ? title : name} </MovieTitle>\n                <EllipsisText text={`${title ? title : name}`} length={24} />\n              </MovieRate>\n            </MovieLink>\n          </MovieItem>\n        ))}\n      </MovieList>\n    </>\n  );\n};\n\nexport default MoviesGalery;\n","import styled from 'styled-components';\n\nexport const PaginationContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  // align-items: center;\n`;\n","import React from 'react';\nimport { Pagination, PaginationItem } from '@mui/material';\nimport { PaginationContainer } from './Pagination.styled';\nimport { grey } from '@mui/material/colors';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport { Link, MemoryRouter, Routes, Route } from 'react-router-dom';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: grey[100],\n    },\n  },\n});\nconst PaginationList = ({ totalPage, currentPage, paginate, searchParams }) => {\n  return (\n    <PaginationContainer>\n      <ThemeProvider theme={theme}>\n        <Pagination\n          showFirstButton\n          showLastButton\n          count={totalPage}\n          page={currentPage}\n          color=\"primary\"\n          shape=\"rounded\"\n          variant=\"outlined\"\n          onChange={(_, num) => {\n            paginate(num);\n            console.log(currentPage);\n          }}\n          renderItem={item => (\n            <PaginationItem\n              component={Link}\n              to={`${searchParams}?page=${item.page}`}\n              {...item}\n            />\n          )}\n        />\n      </ThemeProvider>\n    </PaginationContainer>\n  );\n};\n\nexport default PaginationList;\n\nexport function PaginationLink() {\n  return (\n    <MemoryRouter initialEntries={['/inbox']} initialIndex={0}>\n      <Routes>\n        <Route path=\"*\" element={<PaginationList />} />\n      </Routes>\n    </MemoryRouter>\n  );\n}\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  width: 250px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 20px;\n  padding: 0 10px;\n\n  @media screen and (min-width: 768px) {\n    width: 550px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-top: 20px;\n    padding: 0 10px;\n  }\n  @media screen and (min-width: 1200px) {\n    width: 550px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-top: 20px;\n    padding: 0 10px;\n  }\n`;\nexport const SearchInput = styled.input`\n  border: none;\n  background-color: transparent;\n  padding: 10px 15px;\n  width: 100%;\n\n  color: aliceblue;\n  border-bottom: 1px solid rgba(196, 232, 241, 1);\n  :focus {\n    border-radius: 5px;\n    outline: none;\n    -webkit-box-shadow: 3px 1px 14px 0px rgba(196, 232, 241, 1);\n    -moz-box-shadow: 3px 1px 14px 0px rgba(196, 232, 241, 1);\n    box-shadow: 3px 1px 14px 0px rgba(196, 232, 241, 1);\n  }\n`;\nexport const SearchBtn = styled.button`\n  border: none;\n  background-color: transparent;\n  padding: 0;\n  cursor: pointer;\n  margin-left: -35px;\n  :hover {\n    scale: 1.2;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const SortBarSelect = styled.select`\n  cursor: pointer;\n  border: none;\n  background-color: #212c39;\n  padding: 10px 15px;\n\n  color: aliceblue;\n  border-bottom: 1px solid rgba(196, 232, 241, 1);\n  :focus {\n    border-radius: 5px;\n\n    outline: none;\n    -webkit-box-shadow: 3px 1px 14px 0px rgba(196, 232, 241, 1);\n    -moz-box-shadow: 3px 1px 14px 0px rgba(196, 232, 241, 1);\n    box-shadow: 3px 1px 14px 0px rgba(196, 232, 241, 1);\n  }\n`;\nexport const SortBarOption = styled.option`\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SortBarOption, SortBarSelect } from './SortBar.styled';\n\nconst SortBar = ({ onChange }) => {\n  return (\n    <div>\n      <SortBarSelect name=\"movies\" id=\"movies\" onChange={onChange}>\n        <SortBarOption value=\"\">-🠕🠗 sort by... 🠗🠕-</SortBarOption>\n\n        <SortBarOption value=\"popularity.asc\">popularity 🠕</SortBarOption>\n        <SortBarOption value=\"popularity.desc\">popularity 🠗</SortBarOption>\n        <SortBarOption value=\"vote_average.asc\">vote average 🠕</SortBarOption>\n        <SortBarOption value=\"vote_average.desc\">vote average 🠗</SortBarOption>\n        <SortBarOption value=\"release_date.asc\">release date 🠕</SortBarOption>\n        <SortBarOption value=\"release_date.desc\">release date 🠗</SortBarOption>\n      </SortBarSelect>\n    </div>\n  );\n};\nSortBar.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\nexport default SortBar;\n","import styled from 'styled-components';\n\nexport const SearchOptionContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 10px;\n  @media screen and (min-width: 768px) {\n    align-items: baseline;\n  }\n  @media screen and (min-width: 1200px) {\n    align-items: baseline;\n  }\n`;\nexport const PageContainer = styled.div`\n  padding: 20px;\n  @media screen and (min-width: 768px) {\n    padding: 10px 20px;\n  }\n  @media screen and (min-width: 1200px) {\n    padding: 20px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams, Link } from 'react-router-dom';\nimport { fetchTVBySort } from '../../services/api';\nimport Loader from '../../components/Loader/Loader';\nimport toast from 'react-hot-toast';\nimport MoviesGalery from '../../components/MoviesGalery/MoviesGalery';\nimport SortBar from '../../components/SortBar/SortBar';\nimport { SearchOptionContainer } from '../MoviesPage/MoviesPage.styled';\nimport { PageContainer } from 'pages/MoviesPage/MoviesPage.styled';\nimport PaginationList from 'components/Pagination/Pagination';\nimport { ImSearch } from 'react-icons/im';\nimport { IconContext } from 'react-icons';\nimport { SearchBtn } from 'components/SearchBar/SearchBar.styled';\n\nconst TVPage = () => {\n  const location = useLocation();\n  const [tvepisodes, setTvepisodes] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [loading, setLoading] = useState(false);\n  const [sortOption, setSortOption] = useState(\n    location.search?.split('?').slice(1, 2).join('').split('=')[1] || ''\n  );\n  const [currentPage, setCurrentPage] = useState(\n    parseInt(location.search?.split('?').slice(2).join('').split('=')[1]) || 1\n  );\n  const [totalPage, setTotalPage] = useState(1);\n  searchParams.get('sort');\n\n  const handleChangeSelect = e => {\n    setSearchParams({ sort: e.target.value });\n    setSortOption(e.target.value);\n    setCurrentPage(1);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    fetchTVBySort(sortOption, currentPage)\n      .then(data => {\n        const {\n          data: { results, total_pages },\n        } = data;\n        setTvepisodes(results);\n        setTotalPage(total_pages);\n      })\n      .catch(error => {\n        return toast.error('Sorry, something went wrong, try again');\n      })\n      .finally(setLoading(false));\n  }, [sortOption, currentPage]);\n  const paginate = num => setCurrentPage(num);\n\n  return (\n    <PageContainer>\n      <SearchOptionContainer>\n        <SortBar onChange={handleChangeSelect} />\n\n        <SearchBtn>\n          <Link to={`/tvepisodes/search`} state={{ from: location }}>\n            <IconContext.Provider value={{ color: 'aliceblue', size: '2em' }}>\n              <div>\n                <ImSearch />\n              </div>\n            </IconContext.Provider>\n          </Link>\n        </SearchBtn>\n      </SearchOptionContainer>\n\n      {loading && <Loader />}\n\n      {tvepisodes && (\n        <MoviesGalery pathName={'/tvepisodes'} movies={tvepisodes} />\n      )}\n      <PaginationList\n        totalPage={totalPage}\n        paginate={paginate}\n        currentPage={currentPage}\n        searchParams={`?sort=${sortOption}`}\n      />\n    </PageContainer>\n  );\n};\nexport default TVPage;\n"],"names":["MovieTitle","styled","MovieList","MovieItem","MovieLink","Link","MovieRate","MovieVote","MovieImg","movies","pathName","tvepisodes","location","useLocation","map","id","title","name","poster_path","vote_average","to","state","from","src","imageNotFound","alt","Math","floor","text","length","PaginationContainer","theme","createTheme","palette","primary","main","grey","PaginationList","totalPage","currentPage","paginate","searchParams","ThemeProvider","Pagination","showFirstButton","showLastButton","count","page","color","shape","variant","onChange","_","num","console","log","renderItem","item","PaginationItem","component","SearchForm","SearchInput","SearchBtn","SortBarSelect","SortBarOption","value","SearchOptionContainer","PageContainer","useState","setTvepisodes","useSearchParams","setSearchParams","loading","setLoading","search","split","slice","join","sortOption","setSortOption","parseInt","setCurrentPage","setTotalPage","get","useEffect","fetchTVBySort","then","data","results","total_pages","catch","error","toast","finally","e","sort","target","size"],"sourceRoot":""}