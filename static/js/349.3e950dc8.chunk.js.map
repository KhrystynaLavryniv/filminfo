{"version":3,"file":"static/js/349.3e950dc8.chunk.js","mappings":"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","sources":["components/MoviesGalery/MoviesGalery.styled.jsx","components/MoviesGalery/MoviesGalery.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","components/SearchBar/SearchBar.jsx","components/SearchBar/SearchBar.styled.jsx","pages/SearchPages/MoviesSearch/MoviesSearch.styled.jsx","pages/SearchPages/TVSearchPage/TVEpisodesSearchPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieTitle = styled.p`\n  font-size: 14px;\n  display: none;\n  text-align: center;\n  :hover {\n    display: block;\n  }\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  justify-content: space-between;\n  margin-right: -10px;\n`;\nexport const MovieItem = styled.li`\n  position: relative;\n  width: calc(100% / 5 - 20px);\n  height: auto;\n  margin: 15px 10px;\n  border-radius: 5px;\n  border-radius: 5px 5px 5px 5px;\n  -webkit-box-shadow: 5px 5px 12px 0px rgba(196, 232, 241, 1);\n  -moz-box-shadow: 5px 5px 12px 0px rgba(196, 232, 241, 1);\n  box-shadow: 5px 5px 12px 0px rgba(196, 232, 241, 1);\n  :hover {\n    scale: 1.05;\n\n    -webkit-box-shadow: 5px 5px 12px 0px rgba(196, 232, 241, 1);\n    -moz-box-shadow: 5px 5px 12px 0px rgba(196, 232, 241, 1);\n    box-shadow: 5px 5px 12px 0px rgba(196, 232, 241, 1);\n  }\n`;\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  :hover {\n    cursor: pointer;\n  }\n  :hover p {\n    display: block;\n  }\n  :hover span {\n    display: none;\n  }\n`;\nexport const MovieRate = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 10px 10px 0 10px;\n  height: 25px;\n  color: aliceblue;\n  font-size: 14px;\n`;\nexport const MovieVote = styled.div`\n  width: max-content;\n  background-color: #7dc2fa;\n  border-radius: 5px;\n  padding: 0 5px;\n  display: flex;\n  position: absolute;\n  top: 2px;\n  left: 2px;\n`;\nexport const MovieImg = styled.img`\n  display: block;\n  width: 100%;\n  height: 85%;\n  border-radius: 5px 5px 0 0;\n`;\n","import React from 'react';\nimport { MdOutlineStarRate } from 'react-icons/md';\nimport { useLocation } from 'react-router-dom';\nimport imageNotFound from '../../images/nf.jpg';\nimport EllipsisText from 'react-ellipsis-text';\nimport {\n  MovieList,\n  MovieItem,\n  MovieTitle,\n  MovieLink,\n  MovieRate,\n  MovieImg,\n  MovieVote,\n} from './MoviesGalery.styled';\n\nconst MoviesGalery = ({ movies, tvepisodes, pathName }) => {\n  const location = useLocation();\n  return (\n    <>\n      <MovieList>\n        {movies.map(({ id, title, name, poster_path, vote_average }) => (\n          <MovieItem key={id}>\n            <MovieLink to={`${pathName}/${id}`} state={{ from: location }}>\n              <MovieImg\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                    : imageNotFound\n                }\n                alt={title ? title : name}\n              />\n              <MovieRate>\n                <MovieVote>\n                  <MdOutlineStarRate />\n                  <p>{Math.floor(vote_average * 100) / 100}</p>\n                </MovieVote>\n                <MovieTitle>{title ? title : name} </MovieTitle>\n                <EllipsisText text={`${title ? title : name}`} length={24} />\n              </MovieRate>\n            </MovieLink>\n          </MovieItem>\n        ))}\n      </MovieList>\n    </>\n  );\n};\n\nexport default MoviesGalery;\n","import styled from 'styled-components';\n\nexport const PaginationContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  // align-items: center;\n`;\n","import React from 'react';\nimport { Pagination, PaginationItem } from '@mui/material';\nimport { PaginationContainer } from './Pagination.styled';\nimport { grey } from '@mui/material/colors';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport { Link, MemoryRouter, Routes, Route } from 'react-router-dom';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: grey[100],\n    },\n  },\n});\nconst PaginationList = ({ totalPage, currentPage, paginate, searchParams }) => {\n  return (\n    <PaginationContainer>\n      <ThemeProvider theme={theme}>\n        <Pagination\n          showFirstButton\n          showLastButton\n          count={totalPage}\n          page={currentPage}\n          color=\"primary\"\n          shape=\"rounded\"\n          variant=\"outlined\"\n          onChange={(_, num) => {\n            paginate(num);\n            console.log(currentPage);\n          }}\n          renderItem={item => (\n            <PaginationItem\n              component={Link}\n              to={`${searchParams}?page=${item.page}`}\n              {...item}\n            />\n          )}\n        />\n      </ThemeProvider>\n    </PaginationContainer>\n  );\n};\n\nexport default PaginationList;\n\nexport function PaginationLink() {\n  return (\n    <MemoryRouter initialEntries={['/inbox']} initialIndex={0}>\n      <Routes>\n        <Route path=\"*\" element={<PaginationList />} />\n      </Routes>\n    </MemoryRouter>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { ImSearch } from 'react-icons/im';\nimport { IconContext } from 'react-icons';\nimport { SearchForm, SearchInput, SearchBtn } from './SearchBar.styled';\n\nexport const SearchBar = ({ onSubmit }) => {\n  return (\n    <>\n      <SearchForm onSubmit={onSubmit}>\n        <SearchInput\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          name=\"query\"\n          placeholder=\"\"\n        />\n        <SearchBtn type=\"submit\">\n          <IconContext.Provider value={{ color: 'aliceblue', size: '2em' }}>\n            <div>\n              <ImSearch />\n            </div>\n          </IconContext.Provider>\n        </SearchBtn>\n      </SearchForm>\n    </>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  width: 550px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 20px;\n  padding: 0 10px;\n\n  // -webkit-box-shadow: 3px 1px 14px 0px rgba(196, 232, 241, 1);\n  // -moz-box-shadow: 3px 1px 14px 0px rgba(196, 232, 241, 1);\n  // box-shadow: 3px 1px 14px 0px rgba(196, 232, 241, 1);\n`;\nexport const SearchInput = styled.input`\n  border: none;\n  background-color: transparent;\n  padding: 10px 15px;\n  width: 100%;\n\n  color: aliceblue;\n  border-bottom: 1px solid rgba(196, 232, 241, 1);\n  :focus {\n    border-radius: 5px;\n    outline: none;\n    -webkit-box-shadow: 3px 1px 14px 0px rgba(196, 232, 241, 1);\n    -moz-box-shadow: 3px 1px 14px 0px rgba(196, 232, 241, 1);\n    box-shadow: 3px 1px 14px 0px rgba(196, 232, 241, 1);\n  }\n`;\nexport const SearchBtn = styled.button`\n  border: none;\n  background-color: transparent;\n  padding: 0;\n  cursor: pointer;\n  margin-left: -35px;\n  :hover {\n    scale: 1.2;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const MoviesSearchContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: calc(100vh - 68px - 68px - 36px);\n\n  align-items: center;\n  padding: 20px 20px;\n`;\n","import { SearchBar } from 'components/SearchBar/SearchBar';\nimport React, { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { fetchTVByQuery } from 'services/api';\nimport MoviesGalery from 'components/MoviesGalery/MoviesGalery';\nimport PaginationList from 'components/Pagination/Pagination';\nimport { MoviesSearchContainer } from '../MoviesSearch/MoviesSearch.styled';\nimport Loader from 'components/Loader/Loader';\n\nconst TVSearchPage = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(\n    parseInt(location.search?.split('?').slice(2).join('').split('=')[1]) || 1\n  );\n  const [totalPage, setTotalPage] = useState(1);\n  const [searchString, setSearchString] = useState(\n    location.search?.split('?').slice(1, 2).join('').split('=')[1] || null\n  );\n  searchParams.get('query');\n  console.log(location);\n  console.log(location.search?.split('?').slice(1, 2).join('').split('=')[1]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchString(e.currentTarget.elements.query.value);\n    setCurrentPage(1);\n    setSearchParams({ query: e.currentTarget.elements.query.value });\n    e.currentTarget.elements.query.value = '';\n  };\n  useEffect(() => {\n    if (searchString === '') {\n      return toast.error(\"Sorry, but you didn't enter a movie title\");\n    }\n    if (!searchString) {\n      return;\n    }\n\n    setLoading(true);\n    fetchTVByQuery(searchString, currentPage)\n      .then(data => {\n        const {\n          data: { results, total_pages },\n        } = data;\n\n        if (results.length === 0) {\n          return toast.error(\n            'Sorry, there are no movies with that title, try again'\n          );\n        }\n\n        setMovies(results);\n        setTotalPage(total_pages);\n      })\n      .catch(error => {\n        return toast.error('Sorry, something went wrong, try again');\n      })\n      .finally(setLoading(false));\n  }, [searchString, currentPage]);\n\n  const paginate = num => setCurrentPage(num);\n\n  return (\n    <MoviesSearchContainer>\n      {loading && <Loader />}\n      <SearchBar onSubmit={handleSubmit} />\n      {movies.length > 0 && (\n        <>\n          <MoviesGalery movies={movies} pathName={'/tvepisodes'} />\n          <PaginationList\n            totalPage={totalPage}\n            paginate={paginate}\n            currentPage={currentPage}\n            searchParams={`?query=${searchString}`}\n          />\n        </>\n      )}\n    </MoviesSearchContainer>\n  );\n};\n\nexport default TVSearchPage;\n"],"names":["MovieTitle","styled","MovieList","MovieItem","MovieLink","Link","MovieRate","MovieVote","MovieImg","movies","pathName","tvepisodes","location","useLocation","map","id","title","name","poster_path","vote_average","to","state","from","src","imageNotFound","alt","Math","floor","text","length","PaginationContainer","theme","createTheme","palette","primary","main","grey","PaginationList","totalPage","currentPage","paginate","searchParams","ThemeProvider","Pagination","showFirstButton","showLastButton","count","page","color","shape","variant","onChange","_","num","console","log","renderItem","item","PaginationItem","component","SearchBar","onSubmit","type","autoComplete","autoFocus","placeholder","value","size","SearchForm","SearchInput","SearchBtn","MoviesSearchContainer","useState","setMovies","useSearchParams","setSearchParams","loading","setLoading","parseInt","search","split","slice","join","setCurrentPage","setTotalPage","searchString","setSearchString","get","useEffect","toast","fetchTVByQuery","then","data","results","total_pages","catch","error","finally","e","preventDefault","currentTarget","elements","query"],"sourceRoot":""}