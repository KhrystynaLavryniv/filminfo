{"version":3,"file":"static/js/271.3f0f1cc0.chunk.js","mappings":"gMAEaA,E,QAAkBC,GAAAA,IAAH,8F,SCS5B,EARe,WACb,OACE,UAACD,EAAD,YACE,SAAC,KAAD,CAAUE,MAAM,UAAUC,OAAQ,GAAIC,MAAO,KAD/C,S,wKCFSC,EAAeJ,EAAAA,GAAAA,IAAH,0FAMZK,GAAOL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,yMAYJO,GAAWP,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,4PA0BRQ,IAZWR,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,0MAYGA,EAAAA,GAAAA,EAAH,8C,oJC+ErB,UAxGyB,WAAO,IAAD,MACrBS,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,YAA1B,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,QAAOH,GAiCpB,OA/BAI,EAAAA,EAAAA,YAAU,WACRL,GAAW,IACXM,EAAAA,EAAAA,IAAeZ,GACZa,MAAK,SAAAC,GACJ,MAEIA,EADFA,KAAQC,EADV,EACUA,YAAaC,EADvB,EACuBA,MAAOC,EAD9B,EAC8BA,KAAMC,EADpC,EACoCA,SAAUC,EAD9C,EAC8CA,aAAcC,EAD5D,EAC4DA,OAG5DhB,EAAS,CACPiB,OAAQN,EACJ,kCAAoCA,EACpCO,EACJN,MAAAA,EACAC,KAAAA,EACAC,SAAUA,GAAsB,uBAChCC,aAAAA,EAEAI,aACoB,IAAlBH,EAAOI,OACH,gBACAJ,EAAOK,KAAI,kBAAc,CAAd,EAAGR,SAAmBS,KAAK,WAI/CC,OAAM,SAAAC,GACL,OAAOC,EAAAA,GAAAA,MAAY,6CAGpBC,QAAQxB,GAAW,MACrB,CAACN,KAGF,gCACGK,IAAW,SAAC,IAAD,IAEXF,IACC,+BASE,UAAC,KAAD,YACE,SAAC,KAAD,CAAc4B,KAAK,SAAnB,UACE,SAAC,KAAD,CACEC,GAAE,oBAAEvB,EAAKwB,eAAP,iBAAE,EAAcC,aAAhB,aAAE,EAAqBC,YAAvB,YACFD,MAAO,CAAEC,KAAM1B,EAAKwB,SAFtB,UAIE,SAAC,MAAD,SAGJ,SAAC,KAAD,CACEG,IAAKjC,EAAMkB,OACXgB,IAAKlC,EAAMa,MAAQb,EAAMa,MAAQb,EAAMc,QAGzC,UAAC,KAAD,YACE,UAAC,KAAD,YACE,SAAC,KAAD,UACGd,EAAMa,MAAQb,EAAMa,MAAQb,EAAMc,QAGrC,UAAC,KAAD,YACE,SAAC,MAAD,IACCqB,KAAKC,MAA2B,IAArBpC,EAAMgB,cAAsB,QAE1C,uBAAIhB,EAAMoB,gBACV,SAAC,KAAD,yBACA,uBAAIpB,EAAMe,eAEZ,0BACE,UAAC,KAAD,YACE,yBACE,SAAC,KAAD,CAAMc,GAAE,kBAAahC,EAAb,SAAR,qBAEF,yBACE,SAAC,KAAD,CAAMgC,GAAE,kBAAahC,EAAb,YAAR,wBAEF,yBACE,SAAC,KAAD,CAAMgC,GAAE,kBAAahC,EAAb,YAAR,wBAEF,yBACE,SAAC,KAAD,CAAMgC,GAAE,kBAAahC,EAAb,YAAR,6BAIN,SAAC,KAAD","sources":["components/Loader/Loader.style.jsx","components/Loader/Loader.jsx","components/Navigation/Navigation.styled.jsx","pages/MovieDetalisPage/MovieDetailsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { TailSpin } from 'react-loader-spinner';\nimport { LoaderContainer } from './Loader.style.jsx';\n\nconst Loader = () => {\n  return (\n    <LoaderContainer>\n      <TailSpin color=\"#00BFFF\" height={80} width={80} />;\n    </LoaderContainer>\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const Link = styled(NavLink)`\n  display: block;\n  text-decoration: none;\n  padding: 12px;\n  font-weight: 500;\n  color: aliceblue;\n  font-size: 18px;\n  &.active,\n  &:hover {\n    color: #7dc2fa;\n  }\n`;\nexport const LogoLink = styled(NavLink)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  text-decoration: none;\n  font-weight: 500;\n  color: aliceblue;\n  font-size: 3em;\n  margin-right: 25px;\n  &.active,\n  &:hover {\n    color: #7dc2fa;\n  }\n`;\nexport const LinkFind = styled(NavLink)`\n  display: block;\n  text-decoration: none;\n  padding: 12px;\n  font-weight: 500;\n  color: aliceblue;\n  font-size: 1.5em;\n  &.active,\n  &:hover {\n    color: #7dc2fa;\n  }\n`;\nexport const LogoText = styled.p`\n  font-size: 18px;\n`;\n","import { useState, useEffect, useRef } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { fetchMovieById } from '../../services/api';\nimport Loader from '../../components/Loader/Loader';\nimport toast from 'react-hot-toast';\nimport { BsArrowLeftShort } from 'react-icons/bs';\nimport { Link } from '../../components/Navigation/Navigation.styled';\nimport imageNotFound from '../../images/nf.jpg';\nimport {\n  GoBackButton,\n  MovieImg,\n  MovieDetails,\n  MovieTitle,\n  MovieOverview,\n  AdditionalInformation,\n  Cont,\n  LinkBack,\n  MovieInfo,\n  MovieVote,\n} from './MovieDetalisPage.styled';\nimport { MdOutlineStarRate } from 'react-icons/md';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState();\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n  const path = useRef(location);\n\n  useEffect(() => {\n    setLoading(true);\n    fetchMovieById(movieId)\n      .then(data => {\n        const {\n          data: { poster_path, title, name, overview, vote_average, genres },\n        } = data;\n\n        setMovie({\n          poster: poster_path\n            ? 'https://image.tmdb.org/t/p/w500' + poster_path\n            : imageNotFound,\n          title,\n          name,\n          overview: overview ? overview : 'There is no overview',\n          vote_average,\n\n          genresValues:\n            genres.length === 0\n              ? 'Unknown genre'\n              : genres.map(({ name }) => [name]).join(', '),\n        });\n        // console.log(movie);\n      })\n      .catch(error => {\n        return toast.error('Sorry, something went wrong, try again');\n      })\n\n      .finally(setLoading(false));\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n\n      {movie && (\n        <>\n          {/* <GoBackButton type=\"button\">\n            <LinkBack\n              to={path.current?.state?.from ?? `/`}\n              state={{ from: path.current }}\n            >\n              <BsArrowLeftShort />\n            </LinkBack>\n          </GoBackButton> */}\n          <Cont>\n            <GoBackButton type=\"button\">\n              <LinkBack\n                to={path.current?.state?.from ?? `/`}\n                state={{ from: path.current }}\n              >\n                <BsArrowLeftShort />\n              </LinkBack>\n            </GoBackButton>\n            <MovieImg\n              src={movie.poster}\n              alt={movie.title ? movie.title : movie.name}\n            />\n\n            <MovieInfo>\n              <MovieDetails>\n                <MovieTitle>\n                  {movie.title ? movie.title : movie.name}\n                </MovieTitle>\n                {/* <p>{movie.release_date}</p> */}\n                <MovieVote>\n                  <MdOutlineStarRate />\n                  {Math.floor(movie.vote_average * 100) / 100}\n                </MovieVote>\n                <p>{movie.genresValues}</p>\n                <MovieOverview>Overview:</MovieOverview>\n                <p>{movie.overview}</p>\n              </MovieDetails>\n              <div>\n                <AdditionalInformation>\n                  <li>\n                    <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n                  </li>\n                  <li>\n                    <Link to={`/movies/${movieId}/trailer`}>Trailer</Link>\n                  </li>\n                  <li>\n                    <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n                  </li>\n                  <li>\n                    <Link to={`/movies/${movieId}/similar`}>Similar</Link>\n                  </li>\n                </AdditionalInformation>\n              </div>\n              <Outlet />\n            </MovieInfo>\n          </Cont>\n        </>\n      )}\n    </>\n  );\n};\nexport default MovieDetailsPage;\n"],"names":["LoaderContainer","styled","color","height","width","NavContainer","Link","NavLink","LogoLink","LogoText","movieId","useParams","useState","movie","setMovie","loading","setLoading","location","useLocation","path","useRef","useEffect","fetchMovieById","then","data","poster_path","title","name","overview","vote_average","genres","poster","imageNotFound","genresValues","length","map","join","catch","error","toast","finally","type","to","current","state","from","src","alt","Math","floor"],"sourceRoot":""}