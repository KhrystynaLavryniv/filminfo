{"version":3,"file":"static/js/667.02fa9bdf.chunk.js","mappings":"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","sources":["components/Loader/Loader.style.jsx","components/Loader/Loader.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","components/SortBar/SortBar.styled.jsx","components/SortBar/SortBar.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { TailSpin } from 'react-loader-spinner';\nimport { LoaderContainer } from './Loader.style.jsx';\n\nconst Loader = () => {\n  return (\n    <LoaderContainer>\n      <TailSpin color=\"#00BFFF\" height={80} width={80} />;\n    </LoaderContainer>\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  width: 550px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 20px;\n  padding: 0 10px;\n\n  // -webkit-box-shadow: 3px 1px 14px 0px rgba(196, 232, 241, 1);\n  // -moz-box-shadow: 3px 1px 14px 0px rgba(196, 232, 241, 1);\n  // box-shadow: 3px 1px 14px 0px rgba(196, 232, 241, 1);\n`;\nexport const SearchInput = styled.input`\n  border: none;\n  background-color: transparent;\n  padding: 10px 15px;\n  width: 100%;\n\n  color: aliceblue;\n  border-bottom: 1px solid rgba(196, 232, 241, 1);\n  :focus {\n    border-radius: 5px;\n    outline: none;\n    -webkit-box-shadow: 3px 1px 14px 0px rgba(196, 232, 241, 1);\n    -moz-box-shadow: 3px 1px 14px 0px rgba(196, 232, 241, 1);\n    box-shadow: 3px 1px 14px 0px rgba(196, 232, 241, 1);\n  }\n`;\nexport const SearchBtn = styled.button`\n  border: none;\n  background-color: transparent;\n  padding: 0;\n  cursor: pointer;\n  margin-left: -35px;\n  :hover {\n    scale: 1.2;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ImSearch } from 'react-icons/im';\nimport { IconContext } from 'react-icons';\nimport { SearchForm, SearchInput, SearchBtn } from './SearchBar.styled';\n\nexport const SearchBar = ({ onSubmit }) => {\n  return (\n    <>\n      <SearchForm onSubmit={onSubmit}>\n        <SearchInput\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          name=\"query\"\n          placeholder=\"\"\n        />\n        <SearchBtn type=\"submit\">\n          <IconContext.Provider value={{ color: 'aliceblue', size: '2em' }}>\n            <div>\n              <ImSearch />\n            </div>\n          </IconContext.Provider>\n        </SearchBtn>\n      </SearchForm>\n    </>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const SortBarSelect = styled.select`\n  cursor: pointer;\n  border: none;\n  background-color: #404040;\n  padding: 10px 15px;\n\n  color: aliceblue;\n  border-bottom: 1px solid rgba(196, 232, 241, 1);\n  :focus {\n    border-radius: 5px;\n\n    outline: none;\n    -webkit-box-shadow: 3px 1px 14px 0px rgba(196, 232, 241, 1);\n    -moz-box-shadow: 3px 1px 14px 0px rgba(196, 232, 241, 1);\n    box-shadow: 3px 1px 14px 0px rgba(196, 232, 241, 1);\n  }\n`;\nexport const SortBarOption = styled.option`\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SortBarOption, SortBarSelect } from './SortBar.styled';\n\nconst SortBar = ({ onChange }) => {\n  return (\n    <div>\n      <SortBarSelect name=\"movies\" id=\"movies\" onChange={onChange}>\n        <SortBarOption value=\"\">-ðŸ •ðŸ — sort by... ðŸ —ðŸ •-</SortBarOption>\n\n        <SortBarOption value=\"popularity.asc\">popularity ðŸ •</SortBarOption>\n        <SortBarOption value=\"popularity.desc\">popularity ðŸ —</SortBarOption>\n        <SortBarOption value=\"vote_average.asc\">vote average ðŸ •</SortBarOption>\n        <SortBarOption value=\"vote_average.desc\">vote average ðŸ —</SortBarOption>\n        <SortBarOption value=\"release_date.asc\">release date ðŸ •</SortBarOption>\n        <SortBarOption value=\"release_date.desc\">release date ðŸ —</SortBarOption>\n      </SortBarSelect>\n    </div>\n  );\n};\nSortBar.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\nexport default SortBar;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMovieByQuery, fetchMovieBySort } from '../../services/api';\nimport { SearchBar } from '../../components/SearchBar/SearchBar';\nimport Loader from '../../components/Loader/Loader';\nimport toast from 'react-hot-toast';\nimport MoviesGalery from '../../components/MoviesGalery/MoviesGalery';\nimport SortBar from '../../components/SortBar/SortBar';\nimport { SearchOptionContainer, PageContainer } from './MoviesPage.styled';\nimport PaginationList from 'components/Pagination/Pagination';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [loading, setLoading] = useState(false);\n  const [sortOption, setSortOption] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPage, setTotalPage] = useState(1);\n\n  const searchQuery = searchParams.get('query');\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    setSearchParams({ query: evt.currentTarget.elements.query.value });\n    evt.currentTarget.elements.query.value = '';\n  };\n  const handleChangeSelect = e => {\n    setSortOption(e.target.value);\n  };\n\n  useEffect(() => {\n    if (searchQuery === '') {\n      return toast.error(\"Sorry, but you didn't enter a movie title\");\n    }\n    if (!searchQuery) {\n      return;\n    }\n    setLoading(true);\n    fetchMovieByQuery(searchQuery, currentPage)\n      .then(data => {\n        const {\n          data: { results, total_pages },\n        } = data;\n\n        if (results.length === 0) {\n          return toast.error(\n            'Sorry, there are no movies with that title, try again'\n          );\n        }\n\n        setMovies(results);\n        setTotalPage(total_pages);\n      })\n      .catch(error => {\n        return toast.error('Sorry, something went wrong, try again');\n      })\n      .finally(setLoading(false));\n  }, [searchQuery, currentPage]);\n\n  useEffect(() => {\n    fetchMovieBySort(sortOption, currentPage)\n      .then(data => {\n        const {\n          data: { results, total_pages },\n        } = data;\n        setMovies(results);\n        setTotalPage(total_pages);\n      })\n      .catch(error => {\n        return toast.error('Sorry, something went wrong, try again');\n      });\n  }, [sortOption, currentPage]);\n  const paginate = num => setCurrentPage(num);\n  return (\n    <PageContainer>\n      <SearchOptionContainer>\n        <SortBar onChange={handleChangeSelect} />\n        <SearchBar onSubmit={handleSubmit} />\n      </SearchOptionContainer>\n\n      {loading && <Loader />}\n      {movies && <MoviesGalery movies={movies} />}\n\n      <PaginationList\n        totalPage={totalPage}\n        paginate={paginate}\n        currentPage={currentPage}\n      />\n    </PageContainer>\n  );\n};\nexport default MoviesPage;\n"],"names":["LoaderContainer","styled","color","height","width","SearchForm","SearchInput","SearchBtn","SearchBar","onSubmit","type","autoComplete","autoFocus","name","placeholder","value","size","SortBarSelect","SortBarOption","onChange","id","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","loading","setLoading","sortOption","setSortOption","currentPage","setCurrentPage","totalPage","setTotalPage","searchQuery","get","useEffect","toast","fetchMovieByQuery","then","data","results","total_pages","length","catch","error","finally","fetchMovieBySort","e","target","evt","preventDefault","query","currentTarget","elements","paginate","num"],"sourceRoot":""}